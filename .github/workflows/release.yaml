name: release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run build without pushing to registries'
        required: false
        type: boolean
        default: false

# Ensures that only one workflow run is triggered for the same event and ref.
# If a new run is triggered, it will cancel any in-progress runs for the same group.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    # Add 'actions: write' permission for the GHA cache backend.
    # 'packages: write' is for pushing to GHCR.
    permissions:
      contents: read
      packages: write
      actions: write # Required for cache-to=type:gha

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0 # Pinned to a specific version for stability
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/hosting-tools
            docker.io/cdrocker/hosting-tools
            git.codar.nl/codarhq/hosting-tools
          tags: |
            # Generate tags for branch events (e.g., main, develop)
            type=ref,event=branch
            # Generate semver tags from Git tags (e.g., v1.2.3, v1.2, v1)
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            # Also generate semver tags without the 'v' prefix
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Tag as 'stable' only on a published release event
            type=raw,value=stable,enable=${{ github.event_name == 'release' }}
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.title=hosting-tools
            org.opencontainers.image.description=A collection of self-hosting and operational tools
            org.opencontainers.image.url=https://codar.nl
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3.2.0 # Pinned

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.11.1 # Pinned

      - name: Login to GHCR Container Registry
        uses: docker/login-action@v3.4.0 # Pinned
        with:
          username: ${{ secrets.GHCR_USERNAME }} # Use repository_owner for GHCR
          password: ${{ secrets.GHCR_TOKEN }}
          registry: ghcr.io

      - name: Login to Docker Hub Container Registry
        uses: docker/login-action@v3.4.0 # Pinned
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Codar Container Registry
        uses: docker/login-action@v3.4.0 # Pinned
        with:
          username: ${{ secrets.CODARREPO_USERNAME }}
          password: ${{ secrets.CODARREPO_TOKEN }}
          registry: ${{ secrets.CODARREPO_URL }}

      - name: Build and push container image
        id: docker_build
        uses: docker/build-push-action@v6.18.0 # Pinned
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          # Push is enabled for 'release' events or when 'dry_run' is false on 'workflow_dispatch'
          push: ${{ github.event.inputs.dry_run != 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # --- Caching Optimization ---
          # This is the key to speeding up your builds.
          # It defines the cache sources and destination for Docker build layers.
          cache-from: |
            # Attempt to pull cache from previous runs of this workflow on the same branch/tag.
            type=gha,scope=${{ github.workflow }}
            # CRITICAL: Also attempt to pull cache from the latest build on the 'main' branch.
            # This ensures that when you build a release tag, it uses the most recent
            # cache available, drastically reducing build times.
            type=gha,scope=${{ github.workflow }},ref=refs/heads/main
          # Save the cache for this run, scoped to the workflow name.
          # mode=max includes all intermediate layers for the best caching performance.
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
